/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './weatherList.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../services/loggerService';
import * as import10 from '../../services/weatherService';
import * as import11 from './list.css.shim.ngstyle';
import * as import12 from './list/list.component';
import * as import13 from './list/list.component.ngfactory';
import * as import14 from './pagination/pagination.component';
import * as import15 from './pagination/pagination.component.ngfactory';
import * as import16 from '@angular/common/src/pipes/slice_pipe';
import * as import17 from '@angular/core/src/linker/view_container';
import * as import18 from '@angular/material/card/card';
import * as import19 from '../../../node_modules/@angular/material/card/card.ngfactory';
import * as import20 from './citySearch/citySearch.component';
import * as import21 from './citySearch/citySearch.component.ngfactory';
import * as import22 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import23 from '@angular/core/src/linker/template_ref';
import * as import24 from '@angular/common/src/directives/ng_if';
export class Wrapper_WeatherListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.WeatherListComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.WeatherListComponent(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_location(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.location = currValue;
      this._changes['location'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) {
      if (changed) {
        this.context.ngOnChanges(this._changes);
        this._changes = {};
      }
      if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); }
    }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.gotData.subscribe(_eventHandler.bind(view,'gotData'))); }
  }
}
var renderType_WeatherListComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_WeatherListComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.WeatherListComponent>;
  _WeatherListComponent_0_3:Wrapper_WeatherListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_WeatherListComponent_Host0,renderType_WeatherListComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'weather-list',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_WeatherListComponent0(this.viewUtils,this,0,this._el_0);
    this._WeatherListComponent_0_3 = new Wrapper_WeatherListComponent(this.compView_0.ref,this.injectorGet(import9.LoggerService,this.parentIndex),this.injectorGet(import10.WeatherService,this.parentIndex));
    this.compView_0.create(this._WeatherListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._WeatherListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.WeatherListComponent) && (0 === requestNodeIndex))) { return this._WeatherListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._WeatherListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._WeatherListComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const WeatherListComponentNgFactory:import8.ComponentFactory<import0.WeatherListComponent> = new import8.ComponentFactory<import0.WeatherListComponent>('weather-list',View_WeatherListComponent_Host0,import0.WeatherListComponent);
const styles_WeatherListComponent:any[] = [import11.styles];
class View_WeatherListComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  compView_4:import2.AppView<import12.ListComponent>;
  _ListComponent_4_3:import13.Wrapper_ListComponent;
  _text_5:any;
  _el_6:any;
  compView_6:import2.AppView<import14.PaginationListComponent>;
  _PaginationListComponent_6_3:import15.Wrapper_PaginationListComponent;
  _text_7:any;
  _text_8:any;
  _pipe_slice_0:import16.SlicePipe;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_WeatherListComponent1,renderType_WeatherListComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','col-sm-10 col-sm-offset-1'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n                        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'list-table',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_4 = new import13.View_ListComponent0(this.viewUtils,this,4,this._el_4);
    this._ListComponent_4_3 = new import13.Wrapper_ListComponent();
    this.compView_4.create(this._ListComponent_4_3.context);
    this._text_5 = this.renderer.createText(this._el_2,'\n                        ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_2,'list-pagination',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_6 = new import15.View_PaginationListComponent0(this.viewUtils,this,6,this._el_6);
    this._PaginationListComponent_6_3 = new import15.Wrapper_PaginationListComponent();
    this.compView_6.create(this._PaginationListComponent_6_3.context);
    this._text_7 = this.renderer.createText(this._el_2,'\n                        ',(null as any));
    this._text_8 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray8(6,'setFavorite',(null as any),'unsetFavorite',(null as any),'deleteItem',(null as any)),this.eventHandler(this.handleEvent_4));
    this._ListComponent_4_3.subscribe(this,this.eventHandler(this.handleEvent_4),true,true,true);
    this._pipe_slice_0 = new import16.SlicePipe();
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray2(2,'setPage',(null as any)),this.eventHandler(this.handleEvent_6));
    this._PaginationListComponent_6_3.subscribe(this,this.eventHandler(this.handleEvent_6),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.ListComponent) && (4 === requestNodeIndex))) { return this._ListComponent_4_3.context; }
    if (((token === import14.PaginationListComponent) && (6 === requestNodeIndex))) { return this._PaginationListComponent_6_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    valUnwrapper.reset();
    const currVal_4_0_0:any = valUnwrapper.unwrap(this._pipe_slice_0.transform(this.parentView.context.list,((this.parentView.context.currentPage - 1) * this.parentView.context.linesCountPerPage),(this.parentView.context.currentPage * this.parentView.context.linesCountPerPage)));
    this._ListComponent_4_3.check_list(currVal_4_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    if (this._ListComponent_4_3.ngDoCheck(this,this._el_4,throwOnChange)) { this.compView_4.markAsCheckOnce(); }
    const currVal_6_0_0:any = this.parentView.context.pageCount;
    this._PaginationListComponent_6_3.check_totalCount(currVal_6_0_0,throwOnChange,false);
    const currVal_6_0_1:any = this.parentView.context.currentPage;
    this._PaginationListComponent_6_3.check_currentPage(currVal_6_0_1,throwOnChange,false);
    if (this._PaginationListComponent_6_3.ngDoCheck(this,this._el_6,throwOnChange)) { this.compView_6.markAsCheckOnce(); }
    this.compView_4.internalDetectChanges(throwOnChange);
    this.compView_6.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_4.destroy();
    this.compView_6.destroy();
    this._ListComponent_4_3.ngOnDestroy();
    this._PaginationListComponent_6_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'setFavorite')) {
      const pd_sub_0:any = ((<any>this.parentView.context.setFavorite($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'unsetFavorite')) {
      const pd_sub_1:any = ((<any>this.parentView.context.unsetFavorite($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'deleteItem')) {
      const pd_sub_2:any = ((<any>this.parentView.context.deleteCity($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'setPage')) {
      const pd_sub_0:any = ((<any>this.parentView.context.setPage($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_WeatherListComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_WeatherListComponent,{});
export class View_WeatherListComponent0 extends import2.AppView<import0.WeatherListComponent> {
  _el_0:any;
  compView_0:import2.AppView<import18.MdCard>;
  _MdCard_0_3:import19.Wrapper_MdCard;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import20.CitySearchComponent>;
  _CitySearchComponent_2_3:import21.Wrapper_CitySearchComponent;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import17.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import22.Wrapper_NgIf;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_WeatherListComponent0,renderType_WeatherListComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'md-card',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import19.View_MdCard0(this.viewUtils,this,0,this._el_0);
    this._MdCard_0_3 = new import19.Wrapper_MdCard();
    this._text_1 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,(null as any),'city-search',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import21.View_CitySearchComponent0(this.viewUtils,this,2,this._el_2);
    this._CitySearchComponent_2_3 = new import21.Wrapper_CitySearchComponent();
    this.compView_2.create(this._CitySearchComponent_2_3.context);
    this._text_3 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_4 = new import17.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import23.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import22.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText((null as any),'\n                ',(null as any));
    this.compView_0.create(this._MdCard_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'addCity',(null as any)),this.eventHandler(this.handleEvent_2));
    this._CitySearchComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.CitySearchComponent) && (2 === requestNodeIndex))) { return this._CitySearchComponent_2_3.context; }
    if (((token === import23.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import24.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import18.MdCard) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdCard_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._MdCard_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    if (this._CitySearchComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange)) { this.compView_2.markAsCheckOnce(); }
    const currVal_4_0_0:any = this.context.list;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_4.destroyNestedViews();
    this.compView_0.destroy();
    this.compView_2.destroy();
    this._CitySearchComponent_2_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {
      cb(this._text_1,ctx);
      cb(this._el_2,ctx);
      cb(this._text_3,ctx);
      cb(this._vc_4.nativeElement,ctx);
      this._vc_4.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_5,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 4)) { return new View_WeatherListComponent1(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'addCity')) {
      const pd_sub_0:any = ((<any>this.context.addNewCity($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}