/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './pagination.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/material/button-toggle/button-toggle';
import * as import10 from '../../../../node_modules/@angular/material/button-toggle/button-toggle.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import13 from '@angular/core/src/linker/query_list';
import * as import14 from '@angular/material/button/button';
import * as import15 from '../../../../node_modules/@angular/material/button/button.ngfactory';
import * as import16 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/common/src/directives/ng_for';
import * as import21 from '@angular/forms/src/directives/control_value_accessor';
export class Wrapper_PaginationListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.PaginationListComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this._changes = {};
    this.context = new import0.PaginationListComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_totalCount(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.totalCount = currValue;
      this._changes['totalCount'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_currentPage(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.currentPage = currValue;
      this._changes['currentPage'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.setPage.subscribe(_eventHandler.bind(view,'setPage'))); }
  }
}
var renderType_PaginationListComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_PaginationListComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.PaginationListComponent>;
  _PaginationListComponent_0_3:Wrapper_PaginationListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_PaginationListComponent_Host0,renderType_PaginationListComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'list-pagination',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_PaginationListComponent0(this.viewUtils,this,0,this._el_0);
    this._PaginationListComponent_0_3 = new Wrapper_PaginationListComponent();
    this.compView_0.create(this._PaginationListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._PaginationListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.PaginationListComponent) && (0 === requestNodeIndex))) { return this._PaginationListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._PaginationListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._PaginationListComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const PaginationListComponentNgFactory:import8.ComponentFactory<import0.PaginationListComponent> = new import8.ComponentFactory<import0.PaginationListComponent>('list-pagination',View_PaginationListComponent_Host0,import0.PaginationListComponent);
const styles_PaginationListComponent:any[] = ([] as any[]);
class View_PaginationListComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import9.MdButtonToggle>;
  _MdButtonToggle_0_3:import10.Wrapper_MdButtonToggle;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_PaginationListComponent1,renderType_PaginationListComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'md-button-toggle',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import10.View_MdButtonToggle0(this.viewUtils,this,0,this._el_0);
    this._MdButtonToggle_0_3 = new import10.Wrapper_MdButtonToggle((<View_PaginationListComponent0>this.parentView)._MdButtonToggleGroup_2_3.context,this.parentView.parentView.injectorGet(import9.MdButtonToggleGroupMultiple,this.parentView.parentIndex,(null as any)),this.parentView.parentView.injectorGet(import12.UniqueSelectionDispatcher,this.parentView.parentIndex),this.renderer);
    this._text_1 = this.renderer.createText((null as any),'',(null as any));
    this.compView_0.create(this._MdButtonToggle_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.MdButtonToggle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdButtonToggle_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    this._MdButtonToggle_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._MdButtonToggle_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdButtonToggle_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'\n                            ',this.context.$implicit,'\n                        ');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_PaginationListComponent0>this.parentView)._query_MdButtonToggle_2_0.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdButtonToggle_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) { cb(this._text_1,ctx); }
  }
}
var renderType_PaginationListComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_PaginationListComponent,{});
export class View_PaginationListComponent0 extends import2.AppView<import0.PaginationListComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _MdButtonToggleGroup_2_3:import10.Wrapper_MdButtonToggleGroup;
  __NG_VALUE_ACCESSOR_2_4:any[];
  _query_MdButtonToggle_2_0:import13.QueryList<any>;
  _text_3:any;
  _el_4:any;
  compView_4:import2.AppView<import14.MdButton>;
  _MdButton_4_3:import15.Wrapper_MdButton;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import11.ViewContainer;
  _TemplateRef_10_5:any;
  _NgFor_10_6:import16.Wrapper_NgFor;
  _text_11:any;
  _el_12:any;
  compView_12:import2.AppView<import14.MdButton>;
  _MdButton_12_3:import15.Wrapper_MdButton;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_PaginationListComponent0,renderType_PaginationListComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce);
    this._expr_29 = import1.UNINITIALIZED;
    this._expr_30 = import1.UNINITIALIZED;
  }
  get _NG_VALUE_ACCESSOR_2_4():any[] {
    if ((this.__NG_VALUE_ACCESSOR_2_4 == null)) { (this.__NG_VALUE_ACCESSOR_2_4 = [this._MdButtonToggleGroup_2_3.context]); }
    return this.__NG_VALUE_ACCESSOR_2_4;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','col-sm-5 col-sm-offset-4'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'md-button-toggle-group',new import3.InlineArray2(2,'role','radiogroup'),(null as any));
    this._MdButtonToggleGroup_2_3 = new import10.Wrapper_MdButtonToggleGroup();
    this._query_MdButtonToggle_2_0 = new import13.QueryList<any>();
    this._text_3 = this.renderer.createText(this._el_2,'\n                        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'button',new import3.InlineArray2(2,'md-raised-button',''),(null as any));
    this.compView_4 = new import15.View_MdButton0(this.viewUtils,this,4,this._el_4);
    this._MdButton_4_3 = new import15.Wrapper_MdButton(new import17.ElementRef(this._el_4),this.renderer);
    this._text_5 = this.renderer.createText((null as any),'\n                            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'aria-hidden','true'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'«',(null as any));
    this._text_8 = this.renderer.createText((null as any),'\n                        ',(null as any));
    this.compView_4.create(this._MdButton_4_3.context);
    this._text_9 = this.renderer.createText(this._el_2,'\n                        ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_10 = new import11.ViewContainer(10,2,this,this._anchor_10);
    this._TemplateRef_10_5 = new import18.TemplateRef_(this,10,this._anchor_10);
    this._NgFor_10_6 = new import16.Wrapper_NgFor(this._vc_10.vcRef,this._TemplateRef_10_5,this.parentView.injectorGet(import19.IterableDiffers,this.parentIndex),this.ref);
    this._text_11 = this.renderer.createText(this._el_2,'\n                        ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_2,'button',new import3.InlineArray2(2,'md-raised-button',''),(null as any));
    this.compView_12 = new import15.View_MdButton0(this.viewUtils,this,12,this._el_12);
    this._MdButton_12_3 = new import15.Wrapper_MdButton(new import17.ElementRef(this._el_12),this.renderer);
    this._text_13 = this.renderer.createText((null as any),'\n                            ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'aria-hidden','true'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'»',(null as any));
    this._text_16 = this.renderer.createText((null as any),'\n                        ',(null as any));
    this.compView_12.create(this._MdButton_12_3.context);
    this._text_17 = this.renderer.createText(this._el_2,'\n                    ',(null as any));
    this._text_18 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_2));
    this._MdButtonToggleGroup_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_4));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_12,new import3.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_12));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.MdButton) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._MdButton_4_3.context; }
    if (((token === import18.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import20.NgFor) && (10 === requestNodeIndex))) { return this._NgFor_10_6.context; }
    if (((token === import14.MdButton) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 16)))) { return this._MdButton_12_3.context; }
    if (((token === import9.MdButtonToggleGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._MdButtonToggleGroup_2_3.context; }
    if (((token === import21.NG_VALUE_ACCESSOR) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NG_VALUE_ACCESSOR_2_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.currentPage;
    this._MdButtonToggleGroup_2_3.check_value(currVal_2_0_0,throwOnChange,false);
    this._MdButtonToggleGroup_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    if (this._MdButton_4_3.ngDoCheck(this,this._el_4,throwOnChange)) { this.compView_4.markAsCheckOnce(); }
    const currVal_10_0_0:any = this.context.pages;
    this._NgFor_10_6.check_ngForOf(currVal_10_0_0,throwOnChange,false);
    this._NgFor_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    if (this._MdButton_12_3.ngDoCheck(this,this._el_12,throwOnChange)) { this.compView_12.markAsCheckOnce(); }
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) { if (this._query_MdButtonToggle_2_0.dirty) {
        this._query_MdButtonToggle_2_0.reset([this._vc_10.mapNestedViews(View_PaginationListComponent1,(nestedView:View_PaginationListComponent1):any => {
          return [nestedView._MdButtonToggle_0_3.context];
      })]);
      this._MdButtonToggleGroup_2_3.context._buttonToggles = this._query_MdButtonToggle_2_0;
      this._query_MdButtonToggle_2_0.notifyOnChanges();
    } }
    this._MdButtonToggleGroup_2_3.checkHost(this,this,this._el_2,throwOnChange);
    const currVal_29:any = (this.context.currentPage === 1);
    if (import3.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementClass(this._el_4,'disabled',currVal_29);
      this._expr_29 = currVal_29;
    }
    this._MdButton_4_3.checkHost(this,this.compView_4,this._el_4,throwOnChange);
    const currVal_30:any = (this.context.currentPage === this.context.totalCount);
    if (import3.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementClass(this._el_12,'disabled',currVal_30);
      this._expr_30 = currVal_30;
    }
    this._MdButton_12_3.checkHost(this,this.compView_12,this._el_12,throwOnChange);
    this.compView_4.internalDetectChanges(throwOnChange);
    this.compView_12.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._MdButtonToggleGroup_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_10.destroyNestedViews();
    this.compView_4.destroy();
    this.compView_12.destroy();
    this._MdButtonToggleGroup_2_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 4) && (ngContentIndex == 0))) {
      cb(this._text_5,ctx);
      cb(this._el_6,ctx);
      cb(this._text_8,ctx);
    }
    if (((nodeIndex == 12) && (ngContentIndex == 0))) {
      cb(this._text_13,ctx);
      cb(this._el_14,ctx);
      cb(this._text_16,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 10)) { return new View_PaginationListComponent1(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>this.context.changePage(this._MdButtonToggleGroup_2_3.context.value)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.compView_4.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_4_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.previousPage($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_12(eventName:string,$event:any):boolean {
    this.compView_12.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_12_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.nextPage($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}