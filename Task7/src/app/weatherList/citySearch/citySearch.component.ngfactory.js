/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require("./citySearch.component");
var import1 = require("@angular/core/src/linker/view");
var import3 = require("@angular/core/src/linker/view_utils");
var import4 = require("@angular/core/src/metadata/view");
var import5 = require("@angular/core/src/linker/view_type");
var import6 = require("@angular/core/src/change_detection/constants");
var import7 = require("@angular/core/src/linker/component_factory");
var import8 = require("./search.css.shim.ngstyle");
var import9 = require("@angular/material/input/input-container");
var import10 = require("../../../../node_modules/@angular/material/input/input-container.ngfactory");
var import11 = require("@angular/core/src/linker/query_list");
var import12 = require("../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory");
var import13 = require("../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory");
var import14 = require("../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory");
var import15 = require("@angular/material/button/button");
var import16 = require("../../../../node_modules/@angular/material/button/button.ngfactory");
var import17 = require("@angular/core/src/linker/element_ref");
var import18 = require("@angular/forms/src/directives/default_value_accessor");
var import19 = require("@angular/forms/src/directives/control_value_accessor");
var import20 = require("@angular/forms/src/directives/ng_model");
var import21 = require("@angular/forms/src/directives/ng_control");
var import22 = require("@angular/forms/src/directives/ng_control_status");
var Wrapper_CitySearchComponent = (function () {
    function Wrapper_CitySearchComponent() {
        this._changed = false;
        this.context = new import0.CitySearchComponent();
    }
    Wrapper_CitySearchComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_CitySearchComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_CitySearchComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_CitySearchComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_CitySearchComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_CitySearchComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.addCity.subscribe(_eventHandler.bind(view, 'addCity')));
        }
    };
    return Wrapper_CitySearchComponent;
}());
exports.Wrapper_CitySearchComponent = Wrapper_CitySearchComponent;
var renderType_CitySearchComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_CitySearchComponent_Host0 = (function (_super) {
    __extends(View_CitySearchComponent_Host0, _super);
    function View_CitySearchComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_CitySearchComponent_Host0, renderType_CitySearchComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_CitySearchComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'city-search', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_CitySearchComponent0(this.viewUtils, this, 0, this._el_0);
        this._CitySearchComponent_0_3 = new Wrapper_CitySearchComponent();
        this.compView_0.create(this._CitySearchComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._CitySearchComponent_0_3.context);
    };
    View_CitySearchComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.CitySearchComponent) && (0 === requestNodeIndex))) {
            return this._CitySearchComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_CitySearchComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._CitySearchComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_CitySearchComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._CitySearchComponent_0_3.ngOnDestroy();
    };
    View_CitySearchComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_CitySearchComponent_Host0;
}(import1.AppView));
exports.CitySearchComponentNgFactory = new import7.ComponentFactory('city-search', View_CitySearchComponent_Host0, import0.CitySearchComponent);
var styles_CitySearchComponent = [import8.styles];
var renderType_CitySearchComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_CitySearchComponent, {});
var View_CitySearchComponent0 = (function (_super) {
    __extends(View_CitySearchComponent0, _super);
    function View_CitySearchComponent0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_CitySearchComponent0, renderType_CitySearchComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckOnce) || this;
    }
    View_CitySearchComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'row'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n                  ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'search-container'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n                      ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'md-input-container', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_4 = new import10.View_MdInputContainer0(this.viewUtils, this, 4, this._el_4);
        this._MdInputContainer_4_3 = new import10.Wrapper_MdInputContainer();
        this._query_MdInputDirective_4_0 = new import11.QueryList();
        this._query_MdPlaceholder_4_1 = new import11.QueryList();
        this._query_MdHint_4_2 = new import11.QueryList();
        this._text_5 = this.renderer.createText(null, '\n                          ', null);
        this._el_6 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray8(8, 'class', 'md-input-element', 'md-input', '', 'placeholder', 'Enter city name', 'type', 'text'), null);
        this._DefaultValueAccessor_6_3 = new import12.Wrapper_DefaultValueAccessor(this.renderer, new import17.ElementRef(this._el_6));
        this._NG_VALUE_ACCESSOR_6_4 = [this._DefaultValueAccessor_6_3.context];
        this._NgModel_6_5 = new import13.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_6_4);
        this._NgControl_6_6 = this._NgModel_6_5.context;
        this._NgControlStatus_6_7 = new import14.Wrapper_NgControlStatus(this._NgControl_6_6);
        this._MdInputDirective_6_8 = new import10.Wrapper_MdInputDirective(new import17.ElementRef(this._el_6), this.renderer, this._NgControl_6_6);
        this._text_7 = this.renderer.createText(null, '\n                      ', null);
        this.compView_4.create(this._MdInputContainer_4_3.context);
        this._text_8 = this.renderer.createText(this._el_2, '\n                      ', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_2, 'button', new import3.InlineArray4(4, 'md-raised-button', '', 'value', 'Add to table'), null);
        this.compView_9 = new import16.View_MdButton0(this.viewUtils, this, 9, this._el_9);
        this._MdButton_9_3 = new import16.Wrapper_MdButton(new import17.ElementRef(this._el_9), this.renderer);
        this._text_10 = this.renderer.createText(null, 'Add', null);
        this.compView_9.create(this._MdButton_9_3.context);
        this._text_11 = this.renderer.createText(this._el_2, '\n                  ', null);
        this._text_12 = this.renderer.createText(this._el_0, '\n              ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_4, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_4));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_6, new import3.InlineArray16(10, 'ngModelChange', null, 'keyup.enter', null, 'input', null, 'blur', null, 'focus', null), this.eventHandler(this.handleEvent_6));
        this._NgModel_6_5.subscribe(this, this.eventHandler(this.handleEvent_6), true);
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_9, new import3.InlineArray8(8, 'click', null, 'mousedown', null, 'focus', null, 'blur', null), this.eventHandler(this.handleEvent_9));
        this._query_MdInputDirective_4_0.reset([this._MdInputDirective_6_8.context]);
        this._MdInputContainer_4_3.context._mdInputChild = this._query_MdInputDirective_4_0.first;
        this._query_MdPlaceholder_4_1.reset([]);
        this._MdInputContainer_4_3.context._placeholderChild = this._query_MdPlaceholder_4_1.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._text_12
        ]), [
            disposable_0,
            disposable_1,
            disposable_2
        ]);
        return null;
    };
    View_CitySearchComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.DefaultValueAccessor) && (6 === requestNodeIndex))) {
            return this._DefaultValueAccessor_6_3.context;
        }
        if (((token === import19.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_6_4;
        }
        if (((token === import20.NgModel) && (6 === requestNodeIndex))) {
            return this._NgModel_6_5.context;
        }
        if (((token === import21.NgControl) && (6 === requestNodeIndex))) {
            return this._NgControl_6_6;
        }
        if (((token === import22.NgControlStatus) && (6 === requestNodeIndex))) {
            return this._NgControlStatus_6_7.context;
        }
        if (((token === import9.MdInputDirective) && (6 === requestNodeIndex))) {
            return this._MdInputDirective_6_8.context;
        }
        if (((token === import9.MdInputContainer) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._MdInputContainer_4_3.context;
        }
        if (((token === import15.MdButton) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 10)))) {
            return this._MdButton_9_3.context;
        }
        return notFoundResult;
    };
    View_CitySearchComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MdInputContainer_4_3.ngDoCheck(this, this._el_4, throwOnChange);
        this._DefaultValueAccessor_6_3.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_1_0 = this.context.cityToAdd;
        this._NgModel_6_5.check_model(currVal_6_1_0, throwOnChange, false);
        this._NgModel_6_5.ngDoCheck(this, this._el_6, throwOnChange);
        this._NgControlStatus_6_7.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_6_3_0 = 'Enter city name';
        this._MdInputDirective_6_8.check_placeholder(currVal_6_3_0, throwOnChange, false);
        var currVal_6_3_1 = 'text';
        this._MdInputDirective_6_8.check_type(currVal_6_3_1, throwOnChange, false);
        this._MdInputDirective_6_8.ngDoCheck(this, this._el_6, throwOnChange);
        if (this._MdButton_9_3.ngDoCheck(this, this._el_9, throwOnChange)) {
            this.compView_9.markAsCheckOnce();
        }
        if (!throwOnChange) {
            if (this._query_MdHint_4_2.dirty) {
                this._query_MdHint_4_2.reset([]);
                this._MdInputContainer_4_3.context._hintChildren = this._query_MdHint_4_2;
                this._query_MdHint_4_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputDirective_6_8.context.ngAfterContentInit();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInputContainer_4_3.context.ngAfterContentInit();
            }
        }
        this._MdInputContainer_4_3.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this._NgControlStatus_6_7.checkHost(this, this, this._el_6, throwOnChange);
        this._MdInputDirective_6_8.checkHost(this, this, this._el_6, throwOnChange);
        this._MdButton_9_3.checkHost(this, this.compView_9, this._el_9, throwOnChange);
        this.compView_4.internalDetectChanges(throwOnChange);
        this.compView_9.internalDetectChanges(throwOnChange);
    };
    View_CitySearchComponent0.prototype.destroyInternal = function () {
        this.compView_4.destroy();
        this.compView_9.destroy();
        this._NgModel_6_5.ngOnDestroy();
        this._MdInputDirective_6_8.ngOnDestroy();
    };
    View_CitySearchComponent0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 4) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 1))) {
            cb(this._text_5, ctx);
            cb(this._el_6, ctx);
            cb(this._text_7, ctx);
        }
        if (((nodeIndex == 4) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 3))) { }
        if (((nodeIndex == 4) && (ngContentIndex == 4))) { }
        if (((nodeIndex == 9) && (ngContentIndex == 0))) {
            cb(this._text_10, ctx);
        }
    };
    View_CitySearchComponent0.prototype.handleEvent_4 = function (eventName, $event) {
        this.compView_4.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInputContainer_4_3.handleEvent(eventName, $event) && result);
        return result;
    };
    View_CitySearchComponent0.prototype.handleEvent_6 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_6_3.handleEvent(eventName, $event) && result);
        result = (this._MdInputDirective_6_8.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.cityToAdd = $event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'keyup.enter')) {
            var pd_sub_1 = (this.context.pushCity() !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    View_CitySearchComponent0.prototype.handleEvent_9 = function (eventName, $event) {
        this.compView_9.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdButton_9_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.pushCity() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_CitySearchComponent0;
}(import1.AppView));
exports.View_CitySearchComponent0 = View_CitySearchComponent0;
//# sourceMappingURL=citySearch.component.ngfactory.js.map