/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './weatherList.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '@angular/material/core/compatibility/default-mode';
import * as import6 from '@angular/material/core/ripple/ripple';
import * as import7 from '@angular/material/button/button';
import * as import8 from '@angular/material/button-toggle/button-toggle';
import * as import9 from '@angular/material/card/card';
import * as import10 from '@angular/material/chips/chip-list';
import * as import11 from '@angular/material/checkbox/checkbox';
import * as import12 from '@angular/material/core/portal/portal-directives';
import * as import13 from '@angular/material/core/overlay/overlay-directives';
import * as import14 from '@angular/material/core/platform/index';
import * as import15 from '@angular/material/core/a11y/index';
import * as import16 from '@angular/material/dialog/index';
import * as import17 from '@angular/material/core/line/line';
import * as import18 from '@angular/material/grid-list/grid-list';
import * as import19 from '@angular/http/src/http_module';
import * as import20 from '@angular/material/icon/icon';
import * as import21 from '@angular/material/input/input';
import * as import22 from '@angular/material/list/list';
import * as import23 from '@angular/material/menu/menu';
import * as import24 from '@angular/material/progress-bar/progress-bar';
import * as import25 from '@angular/material/progress-spinner/progress-spinner';
import * as import26 from '@angular/material/radio/radio';
import * as import27 from '@angular/material/select/index';
import * as import28 from '@angular/material/sidenav/sidenav';
import * as import29 from '@angular/material/slider/slider';
import * as import30 from '@angular/material/slide-toggle/slide-toggle';
import * as import31 from '@angular/material/snack-bar/snack-bar';
import * as import32 from '@angular/material/core/observe-content/observe-content';
import * as import33 from '@angular/material/tabs/tab-group';
import * as import34 from '@angular/material/toolbar/toolbar';
import * as import35 from '@angular/material/tooltip/tooltip';
import * as import36 from '@angular/material/core/rtl/dir';
import * as import37 from '@angular/material/core/projection/projection';
import * as import38 from '@angular/material/module';
import * as import39 from '../shared/shared.module';
import * as import40 from '@angular/common/src/localization';
import * as import41 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import42 from '@angular/http/src/backends/browser_xhr';
import * as import43 from '@angular/http/src/base_response_options';
import * as import44 from '@angular/http/src/backends/xhr_backend';
import * as import45 from '@angular/http/src/base_request_options';
import * as import46 from '@angular/material/core/gestures/gesture-config';
import * as import47 from '../../services/weatherService';
import * as import48 from '@angular/core/src/di/injector';
import * as import49 from '../../../node_modules/@angular/material/dialog/dialog-container.ngfactory';
import * as import50 from '../../../node_modules/@angular/material/snack-bar/snack-bar-container.ngfactory';
import * as import51 from '../../../node_modules/@angular/material/snack-bar/simple-snack-bar.ngfactory';
import * as import52 from '../../../node_modules/@angular/material/tooltip/tooltip.ngfactory';
import * as import53 from '@angular/core/src/i18n/tokens';
import * as import54 from '@angular/http/src/interfaces';
import * as import55 from '@angular/http/src/http';
import * as import56 from '@angular/platform-browser/src/dom/events/hammer_gestures';
class WeatherListModuleInjector extends import0.NgModuleInjector<import1.WeatherListModule> {
  _CommonModule_0:import2.CommonModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _FormsModule_2:import4.FormsModule;
  _DefaultStyleCompatibilityModeModule_3:import5.DefaultStyleCompatibilityModeModule;
  _MdRippleModule_4:import6.MdRippleModule;
  _MdButtonModule_5:import7.MdButtonModule;
  _MdButtonToggleModule_6:import8.MdButtonToggleModule;
  _MdCardModule_7:import9.MdCardModule;
  _MdChipsModule_8:import10.MdChipsModule;
  _MdCheckboxModule_9:import11.MdCheckboxModule;
  _PortalModule_10:import12.PortalModule;
  _OverlayModule_11:import13.OverlayModule;
  _PlatformModule_12:import14.PlatformModule;
  _A11yModule_13:import15.A11yModule;
  _MdDialogModule_14:import16.MdDialogModule;
  _MdLineModule_15:import17.MdLineModule;
  _MdGridListModule_16:import18.MdGridListModule;
  _HttpModule_17:import19.HttpModule;
  _MdIconModule_18:import20.MdIconModule;
  _MdInputModule_19:import21.MdInputModule;
  _MdListModule_20:import22.MdListModule;
  _MdMenuModule_21:import23.MdMenuModule;
  _MdProgressBarModule_22:import24.MdProgressBarModule;
  _MdProgressSpinnerModule_23:import25.MdProgressSpinnerModule;
  _MdRadioModule_24:import26.MdRadioModule;
  _MdSelectModule_25:import27.MdSelectModule;
  _MdSidenavModule_26:import28.MdSidenavModule;
  _MdSliderModule_27:import29.MdSliderModule;
  _MdSlideToggleModule_28:import30.MdSlideToggleModule;
  _MdSnackBarModule_29:import31.MdSnackBarModule;
  _ObserveContentModule_30:import32.ObserveContentModule;
  _MdTabsModule_31:import33.MdTabsModule;
  _MdToolbarModule_32:import34.MdToolbarModule;
  _MdTooltipModule_33:import35.MdTooltipModule;
  _RtlModule_34:import36.RtlModule;
  _ProjectionModule_35:import37.ProjectionModule;
  _MaterialModule_36:import38.MaterialModule;
  _SharedModule_37:import39.SharedModule;
  _WeatherListModule_38:import1.WeatherListModule;
  __NgLocalization_39:import40.NgLocaleLocalization;
  __RadioControlRegistry_40:import41.RadioControlRegistry;
  __MATERIAL_COMPATIBILITY_MODE_41:any;
  __BrowserXhr_42:import42.BrowserXhr;
  __ResponseOptions_43:import43.BaseResponseOptions;
  __XSRFStrategy_44:any;
  __XHRBackend_45:import44.XHRBackend;
  __RequestOptions_46:import45.BaseRequestOptions;
  __Http_47:any;
  __HAMMER_GESTURE_CONFIG_48:import46.GestureConfig;
  __WeatherService_49:import47.WeatherService;
  constructor(parent:import48.Injector) {
    super(parent,[
      import49.MdDialogContainerNgFactory,
      import50.MdSnackBarContainerNgFactory,
      import51.SimpleSnackBarNgFactory,
      import52.TooltipComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_39():import40.NgLocaleLocalization {
    if ((this.__NgLocalization_39 == null)) { (this.__NgLocalization_39 = new import40.NgLocaleLocalization(this.parent.get(import53.LOCALE_ID))); }
    return this.__NgLocalization_39;
  }
  get _RadioControlRegistry_40():import41.RadioControlRegistry {
    if ((this.__RadioControlRegistry_40 == null)) { (this.__RadioControlRegistry_40 = new import41.RadioControlRegistry()); }
    return this.__RadioControlRegistry_40;
  }
  get _MATERIAL_COMPATIBILITY_MODE_41():any {
    if ((this.__MATERIAL_COMPATIBILITY_MODE_41 == null)) { (this.__MATERIAL_COMPATIBILITY_MODE_41 = false); }
    return this.__MATERIAL_COMPATIBILITY_MODE_41;
  }
  get _BrowserXhr_42():import42.BrowserXhr {
    if ((this.__BrowserXhr_42 == null)) { (this.__BrowserXhr_42 = new import42.BrowserXhr()); }
    return this.__BrowserXhr_42;
  }
  get _ResponseOptions_43():import43.BaseResponseOptions {
    if ((this.__ResponseOptions_43 == null)) { (this.__ResponseOptions_43 = new import43.BaseResponseOptions()); }
    return this.__ResponseOptions_43;
  }
  get _XSRFStrategy_44():any {
    if ((this.__XSRFStrategy_44 == null)) { (this.__XSRFStrategy_44 = import19._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_44;
  }
  get _XHRBackend_45():import44.XHRBackend {
    if ((this.__XHRBackend_45 == null)) { (this.__XHRBackend_45 = new import44.XHRBackend(this._BrowserXhr_42,this._ResponseOptions_43,this._XSRFStrategy_44)); }
    return this.__XHRBackend_45;
  }
  get _RequestOptions_46():import45.BaseRequestOptions {
    if ((this.__RequestOptions_46 == null)) { (this.__RequestOptions_46 = new import45.BaseRequestOptions()); }
    return this.__RequestOptions_46;
  }
  get _Http_47():any {
    if ((this.__Http_47 == null)) { (this.__Http_47 = import19.httpFactory(this._XHRBackend_45,this._RequestOptions_46)); }
    return this.__Http_47;
  }
  get _HAMMER_GESTURE_CONFIG_48():import46.GestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_48 == null)) { (this.__HAMMER_GESTURE_CONFIG_48 = new import46.GestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_48;
  }
  get _WeatherService_49():import47.WeatherService {
    if ((this.__WeatherService_49 == null)) { (this.__WeatherService_49 = new import47.WeatherService()); }
    return this.__WeatherService_49;
  }
  createInternal():import1.WeatherListModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._FormsModule_2 = new import4.FormsModule();
    this._DefaultStyleCompatibilityModeModule_3 = new import5.DefaultStyleCompatibilityModeModule();
    this._MdRippleModule_4 = new import6.MdRippleModule();
    this._MdButtonModule_5 = new import7.MdButtonModule();
    this._MdButtonToggleModule_6 = new import8.MdButtonToggleModule();
    this._MdCardModule_7 = new import9.MdCardModule();
    this._MdChipsModule_8 = new import10.MdChipsModule();
    this._MdCheckboxModule_9 = new import11.MdCheckboxModule();
    this._PortalModule_10 = new import12.PortalModule();
    this._OverlayModule_11 = new import13.OverlayModule();
    this._PlatformModule_12 = new import14.PlatformModule();
    this._A11yModule_13 = new import15.A11yModule();
    this._MdDialogModule_14 = new import16.MdDialogModule();
    this._MdLineModule_15 = new import17.MdLineModule();
    this._MdGridListModule_16 = new import18.MdGridListModule();
    this._HttpModule_17 = new import19.HttpModule();
    this._MdIconModule_18 = new import20.MdIconModule();
    this._MdInputModule_19 = new import21.MdInputModule();
    this._MdListModule_20 = new import22.MdListModule();
    this._MdMenuModule_21 = new import23.MdMenuModule();
    this._MdProgressBarModule_22 = new import24.MdProgressBarModule();
    this._MdProgressSpinnerModule_23 = new import25.MdProgressSpinnerModule();
    this._MdRadioModule_24 = new import26.MdRadioModule();
    this._MdSelectModule_25 = new import27.MdSelectModule();
    this._MdSidenavModule_26 = new import28.MdSidenavModule();
    this._MdSliderModule_27 = new import29.MdSliderModule();
    this._MdSlideToggleModule_28 = new import30.MdSlideToggleModule();
    this._MdSnackBarModule_29 = new import31.MdSnackBarModule();
    this._ObserveContentModule_30 = new import32.ObserveContentModule();
    this._MdTabsModule_31 = new import33.MdTabsModule();
    this._MdToolbarModule_32 = new import34.MdToolbarModule();
    this._MdTooltipModule_33 = new import35.MdTooltipModule();
    this._RtlModule_34 = new import36.RtlModule();
    this._ProjectionModule_35 = new import37.ProjectionModule();
    this._MaterialModule_36 = new import38.MaterialModule();
    this._SharedModule_37 = new import39.SharedModule();
    this._WeatherListModule_38 = new import1.WeatherListModule();
    return this._WeatherListModule_38;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.FormsModule)) { return this._FormsModule_2; }
    if ((token === import5.DefaultStyleCompatibilityModeModule)) { return this._DefaultStyleCompatibilityModeModule_3; }
    if ((token === import6.MdRippleModule)) { return this._MdRippleModule_4; }
    if ((token === import7.MdButtonModule)) { return this._MdButtonModule_5; }
    if ((token === import8.MdButtonToggleModule)) { return this._MdButtonToggleModule_6; }
    if ((token === import9.MdCardModule)) { return this._MdCardModule_7; }
    if ((token === import10.MdChipsModule)) { return this._MdChipsModule_8; }
    if ((token === import11.MdCheckboxModule)) { return this._MdCheckboxModule_9; }
    if ((token === import12.PortalModule)) { return this._PortalModule_10; }
    if ((token === import13.OverlayModule)) { return this._OverlayModule_11; }
    if ((token === import14.PlatformModule)) { return this._PlatformModule_12; }
    if ((token === import15.A11yModule)) { return this._A11yModule_13; }
    if ((token === import16.MdDialogModule)) { return this._MdDialogModule_14; }
    if ((token === import17.MdLineModule)) { return this._MdLineModule_15; }
    if ((token === import18.MdGridListModule)) { return this._MdGridListModule_16; }
    if ((token === import19.HttpModule)) { return this._HttpModule_17; }
    if ((token === import20.MdIconModule)) { return this._MdIconModule_18; }
    if ((token === import21.MdInputModule)) { return this._MdInputModule_19; }
    if ((token === import22.MdListModule)) { return this._MdListModule_20; }
    if ((token === import23.MdMenuModule)) { return this._MdMenuModule_21; }
    if ((token === import24.MdProgressBarModule)) { return this._MdProgressBarModule_22; }
    if ((token === import25.MdProgressSpinnerModule)) { return this._MdProgressSpinnerModule_23; }
    if ((token === import26.MdRadioModule)) { return this._MdRadioModule_24; }
    if ((token === import27.MdSelectModule)) { return this._MdSelectModule_25; }
    if ((token === import28.MdSidenavModule)) { return this._MdSidenavModule_26; }
    if ((token === import29.MdSliderModule)) { return this._MdSliderModule_27; }
    if ((token === import30.MdSlideToggleModule)) { return this._MdSlideToggleModule_28; }
    if ((token === import31.MdSnackBarModule)) { return this._MdSnackBarModule_29; }
    if ((token === import32.ObserveContentModule)) { return this._ObserveContentModule_30; }
    if ((token === import33.MdTabsModule)) { return this._MdTabsModule_31; }
    if ((token === import34.MdToolbarModule)) { return this._MdToolbarModule_32; }
    if ((token === import35.MdTooltipModule)) { return this._MdTooltipModule_33; }
    if ((token === import36.RtlModule)) { return this._RtlModule_34; }
    if ((token === import37.ProjectionModule)) { return this._ProjectionModule_35; }
    if ((token === import38.MaterialModule)) { return this._MaterialModule_36; }
    if ((token === import39.SharedModule)) { return this._SharedModule_37; }
    if ((token === import1.WeatherListModule)) { return this._WeatherListModule_38; }
    if ((token === import40.NgLocalization)) { return this._NgLocalization_39; }
    if ((token === import41.RadioControlRegistry)) { return this._RadioControlRegistry_40; }
    if ((token === import5.MATERIAL_COMPATIBILITY_MODE)) { return this._MATERIAL_COMPATIBILITY_MODE_41; }
    if ((token === import42.BrowserXhr)) { return this._BrowserXhr_42; }
    if ((token === import43.ResponseOptions)) { return this._ResponseOptions_43; }
    if ((token === import54.XSRFStrategy)) { return this._XSRFStrategy_44; }
    if ((token === import44.XHRBackend)) { return this._XHRBackend_45; }
    if ((token === import45.RequestOptions)) { return this._RequestOptions_46; }
    if ((token === import55.Http)) { return this._Http_47; }
    if ((token === import56.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_48; }
    if ((token === import47.WeatherService)) { return this._WeatherService_49; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const WeatherListModuleNgFactory:import0.NgModuleFactory<import1.WeatherListModule> = new import0.NgModuleFactory(WeatherListModuleInjector,import1.WeatherListModule);