/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './app.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/zone/ng_zone';
import * as import9 from '../services/geolocation';
import * as import10 from './core/navigation/navigation.component';
import * as import11 from './core/navigation/navigation.component.ngfactory';
import * as import12 from './core/loader/loader.component';
import * as import13 from './core/loader/loader.component.ngfactory';
import * as import14 from './weatherList/weatherList.component';
import * as import15 from './weatherList/weatherList.component.ngfactory';
import * as import16 from './map/map.component';
import * as import17 from './map/map.component.ngfactory';
import * as import18 from './core/footer/footer.component';
import * as import19 from './core/footer/footer.component.ngfactory';
import * as import20 from '@angular/common/src/pipes/async_pipe';
import * as import21 from '../services/loggerService';
import * as import22 from '../services/weatherService';
import * as import23 from '@angular/core/src/linker/element_ref';
import * as import24 from '@angular/core/src/change_detection/change_detection_util';
export class Wrapper_AppComponent {
  /*private*/ _eventHandler:Function;
  context:import0.AppComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.AppComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_AppComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_AppComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.AppComponent>;
  _AppComponent_0_3:Wrapper_AppComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AppComponent_Host0,renderType_AppComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'weather-app',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_AppComponent0(this.viewUtils,this,0,this._el_0);
    this._AppComponent_0_3 = new Wrapper_AppComponent(this.injectorGet(import8.NgZone,this.parentIndex),this.injectorGet(import9.LocationService,this.parentIndex));
    this.compView_0.create(this._AppComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._AppComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.AppComponent) && (0 === requestNodeIndex))) { return this._AppComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._AppComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const AppComponentNgFactory:import7.ComponentFactory<import0.AppComponent> = new import7.ComponentFactory<import0.AppComponent>('weather-app',View_AppComponent_Host0,import0.AppComponent);
const styles_AppComponent:any[] = ([] as any[]);
var renderType_AppComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_AppComponent,{});
export class View_AppComponent0 extends import1.AppView<import0.AppComponent> {
  _el_0:any;
  compView_0:import1.AppView<import10.NavigationComponent>;
  _NavigationComponent_0_3:import11.Wrapper_NavigationComponent;
  _text_1:any;
  _el_2:any;
  compView_2:import1.AppView<import12.LoaderComponent>;
  _LoaderComponent_2_3:import13.Wrapper_LoaderComponent;
  _text_3:any;
  _el_4:any;
  compView_4:import1.AppView<import14.WeatherListComponent>;
  _WeatherListComponent_4_3:import15.Wrapper_WeatherListComponent;
  _text_5:any;
  _el_6:any;
  compView_6:import1.AppView<import16.MapComponent>;
  _MapComponent_6_3:import17.Wrapper_MapComponent;
  _text_7:any;
  _el_8:any;
  compView_8:import1.AppView<import18.FooterComponent>;
  _FooterComponent_8_3:import19.Wrapper_FooterComponent;
  _pipe_async_0:import20.AsyncPipe;
  _pipe_async_1:import20.AsyncPipe;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AppComponent0,renderType_AppComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'header-navigation',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import11.View_NavigationComponent0(this.viewUtils,this,0,this._el_0);
    this._NavigationComponent_0_3 = new import11.Wrapper_NavigationComponent();
    this.compView_0.create(this._NavigationComponent_0_3.context);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n               ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,parentRenderNode,'app-loader',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import13.View_LoaderComponent0(this.viewUtils,this,2,this._el_2);
    this._LoaderComponent_2_3 = new import13.Wrapper_LoaderComponent();
    this.compView_2.create(this._LoaderComponent_2_3.context);
    this._text_3 = this.renderer.createText(parentRenderNode,'\n               ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,parentRenderNode,'weather-list',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_4 = new import15.View_WeatherListComponent0(this.viewUtils,this,4,this._el_4);
    this._WeatherListComponent_4_3 = new import15.Wrapper_WeatherListComponent(this.compView_4.ref,this.parentView.injectorGet(import21.LoggerService,this.parentIndex),this.parentView.injectorGet(import22.WeatherService,this.parentIndex));
    this.compView_4.create(this._WeatherListComponent_4_3.context);
    this._text_5 = this.renderer.createText(parentRenderNode,'\n               ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,parentRenderNode,'google-map',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_6 = new import17.View_MapComponent0(this.viewUtils,this,6,this._el_6);
    this._MapComponent_6_3 = new import17.Wrapper_MapComponent(new import23.ElementRef(this._el_6));
    this.compView_6.create(this._MapComponent_6_3.context);
    this._text_7 = this.renderer.createText(parentRenderNode,'\n               ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,parentRenderNode,'app-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_8 = new import19.View_FooterComponent0(this.viewUtils,this,8,this._el_8);
    this._FooterComponent_8_3 = new import19.Wrapper_FooterComponent();
    this.compView_8.create(this._FooterComponent_8_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'gotData',(null as any)),this.eventHandler(this.handleEvent_4));
    this._WeatherListComponent_4_3.subscribe(this,this.eventHandler(this.handleEvent_4),true);
    this._pipe_async_0 = new import20.AsyncPipe(this.ref);
    this._pipe_async_1 = new import20.AsyncPipe(this.ref);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.NavigationComponent) && (0 === requestNodeIndex))) { return this._NavigationComponent_0_3.context; }
    if (((token === import12.LoaderComponent) && (2 === requestNodeIndex))) { return this._LoaderComponent_2_3.context; }
    if (((token === import14.WeatherListComponent) && (4 === requestNodeIndex))) { return this._WeatherListComponent_4_3.context; }
    if (((token === import16.MapComponent) && (6 === requestNodeIndex))) { return this._MapComponent_6_3.context; }
    if (((token === import18.FooterComponent) && (8 === requestNodeIndex))) { return this._FooterComponent_8_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import24.ValueUnwrapper();
    if (this._NavigationComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    const currVal_2_0_0:any = this.context.appState;
    this._LoaderComponent_2_3.check_state(currVal_2_0_0,throwOnChange,false);
    if (this._LoaderComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange)) { this.compView_2.markAsCheckOnce(); }
    valUnwrapper.reset();
    const currVal_4_0_0:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.locationPromise));
    this._WeatherListComponent_4_3.check_location(currVal_4_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    if (this._WeatherListComponent_4_3.ngDoCheck(this,this._el_4,throwOnChange)) { this.compView_4.markAsCheckOnce(); }
    valUnwrapper.reset();
    const currVal_6_0_0:any = valUnwrapper.unwrap(this._pipe_async_1.transform(this.context.locationPromise));
    this._MapComponent_6_3.check_location(currVal_6_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    if (this._MapComponent_6_3.ngDoCheck(this,this._el_6,throwOnChange)) { this.compView_6.markAsCheckOnce(); }
    if (this._FooterComponent_8_3.ngDoCheck(this,this._el_8,throwOnChange)) { this.compView_8.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    this.compView_4.internalDetectChanges(throwOnChange);
    this.compView_6.internalDetectChanges(throwOnChange);
    this.compView_8.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this.compView_2.destroy();
    this.compView_4.destroy();
    this.compView_6.destroy();
    this.compView_8.destroy();
    this._WeatherListComponent_4_3.ngOnDestroy();
    this._pipe_async_0.ngOnDestroy();
    this._pipe_async_1.ngOnDestroy();
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'gotData')) {
      const pd_sub_0:any = ((<any>this.context.dataLoaded($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}